<?xml version="1.0"?>
<ruleset name="WordPress Coding Standards">
	<description>Apply WordPress Coding Standards to all AspireUpdate files</description>

	<!--
	#############################################################################
	COMMAND LINE ARGUMENTS
	https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-Ruleset
	#############################################################################
	-->

	<!-- Only scan PHP files. -->
	<arg name="extensions" value="php"/>

	<!-- Whenever possible, cache the scan results and re-use those for unchanged files on the next scan. -->
	<arg name="cache" value=".cache/phpcs.json"/>

	<!-- Set the memory limit to 512M.
		 For most standard PHP configurations, this means the memory limit will temporarily be raised.
		 Ref: https://github.com/squizlabs/PHP_CodeSniffer/wiki/Advanced-Usage#specifying-phpini-settings
	-->
	<ini name="memory_limit" value="512M"/>

	<!-- Strip the filepaths down to the relevant bit. -->
	<arg name="basepath" value="./"/>

	<!-- Check up to 20 files simultaneously. -->
	<arg name="parallel" value="20"/>

	<!-- Show sniff codes in all reports. -->
	<arg value="ps"/>

	<!--
	#############################################################################
	FILE SELECTION
	Set which files will be subject to the scans executed using this ruleset.
	#############################################################################
	-->

	<file>.</file>

	<!-- Directories and third party library exclusions. -->
	<exclude-pattern>/vendor/*</exclude-pattern>

	<!-- Translation files. -->
	<exclude-pattern>/languages/*</exclude-pattern>

	<!--
	#############################################################################
	SET UP THE RULESET
	#############################################################################
	-->

	<!-- Allow short syntax arrays. -->
	<rule ref="WordPress-Extra">
		<exclude name="Universal.Arrays.DisallowShortArraySyntax"/>
	</rule>

	<!-- Enforce short syntax arrays. -->
	<rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

	<!-- Exclude test classes from naming conventions. -->
	<rule ref="WordPress.Files.FileName.InvalidClassFileName">
		<exclude-pattern>/tests/phpunit/*</exclude-pattern>
	</rule>
	<rule ref="WordPress.Files.FileName.NotHyphenatedLowercase">
		<exclude-pattern>/tests/phpunit/*</exclude-pattern>
	</rule>

	<!-- Exclude test files from overriding globals sniff. -->
	<rule ref="WordPress.WP.GlobalVariablesOverride.Prohibited">
		<exclude-pattern>/tests/phpunit/tests/*</exclude-pattern>
	</rule>

	<!-- Exclude test files from some filesystem sniffs. -->
	<rule ref="WordPress.WP.AlternativeFunctions.file_get_contents_file_get_contents">
		<exclude-pattern>/tests/phpunit/*</exclude-pattern>
	</rule>
	<rule ref="WordPress.WP.AlternativeFunctions.file_system_operations_file_put_contents">
		<exclude-pattern>/tests/phpunit/*</exclude-pattern>
	</rule>
	<rule ref="WordPress.WP.AlternativeFunctions.unlink_unlink">
		<exclude-pattern>/tests/phpunit/*</exclude-pattern>
	</rule>
</ruleset>
